@model TicketSystem.Web.Areas.Admin.Models.EditUserViewModel
@{
    ViewData["Title"] = "Kullanıcı Düzenle";
    var customers = ViewBag.Customers as IEnumerable<TicketSystem.Domain.Entities.Customer>;
}

<div class="h-screen overflow-hidden bg-gray-50 p-4">
    <div class="max-w-6xl mx-auto h-full flex flex-col">
        <!-- Header - Fixed -->
        <div class="flex items-center justify-between mb-6">
            <div>
                <h1 class="text-2xl font-bold text-gray-900">Kullanıcı Düzenle</h1>
                <p class="text-gray-600">Kullanıcı bilgilerini güncelleyin ve değişiklikleri kaydedin</p>
            </div>
            <a href="@Url.Action("Index")"
               class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors flex items-center">
                <i class="fas fa-arrow-left mr-2"></i>
                Geri Dön
            </a>
        </div>

        <!-- Alert Messages - Fixed Position -->
        <div id="alertContainer" class="mb-4 space-y-2">
            @if (TempData["Success"] != null)
            {
                <div class="p-3 bg-emerald-100 border border-emerald-400 text-emerald-700 rounded-lg alert-message">
                    <div class="flex items-center">
                        <i class="fas fa-check-circle mr-2"></i>
                        @TempData["Success"]
                        <button class="ml-auto text-emerald-500 hover:text-emerald-700" onclick="hideAlert(this)">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="p-3 bg-rose-100 border border-rose-400 text-rose-700 rounded-lg alert-message">
                    <div class="flex items-center">
                        <i class="fas fa-exclamation-circle mr-2"></i>
                        @TempData["Error"]
                        <button class="ml-auto text-rose-500 hover:text-rose-700" onclick="hideAlert(this)">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
            }
        </div>

        <!-- Form Container - Scrollable -->
        <div class="flex-1 overflow-y-auto">
            <div class="bg-white rounded-xl shadow-sm border border-gray-200">
                <form method="post" asp-action="Edit" asp-anti-forgery="true" class="p-6">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="Id" value="@Model.Id" />

                    <!-- Validation Summary -->
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="mb-6 p-4 bg-rose-50 border border-rose-200 text-rose-700 rounded-lg">
                            <h3 class="font-medium mb-2">Lütfen aşağıdaki hataları düzeltin:</h3>
                            <div asp-validation-summary="ModelOnly" class="text-sm"></div>
                        </div>
                    }

                    <!-- Form Grid -->
                    <div class="grid grid-cols-1 xl:grid-cols-4 gap-6">

                        <!-- Sol Kolon: Kişisel Bilgiler -->
                        <div class="space-y-4">
                            <div class="border-l-4 border-blue-500 pl-4">
                                <h2 class="text-lg font-semibold text-gray-900 flex items-center">
                                    <i class="fas fa-user mr-2 text-blue-500"></i>
                                    Kişisel Bilgiler
                                </h2>
                            </div>

                            <!-- Ad Soyad -->
                            <div class="space-y-3">
                                <div>
                                    <label for="FirstName" class="block text-sm font-medium text-gray-700 mb-1">
                                        Ad <span class="text-rose-500">*</span>
                                    </label>
                                    <input type="text"
                                           id="FirstName"
                                           name="FirstName"
                                           value="@Model.FirstName"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                                           placeholder="Ad"
                                           required />
                                    <span asp-validation-for="FirstName" class="text-rose-500 text-xs mt-1 block"></span>
                                </div>

                                <div>
                                    <label for="LastName" class="block text-sm font-medium text-gray-700 mb-1">
                                        Soyad <span class="text-rose-500">*</span>
                                    </label>
                                    <input type="text"
                                           id="LastName"
                                           name="LastName"
                                           value="@Model.LastName"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                                           placeholder="Soyad"
                                           required />
                                    <span asp-validation-for="LastName" class="text-rose-500 text-xs mt-1 block"></span>
                                </div>
                            </div>

                            <!-- Email -->
                            <div>
                                <label for="Email" class="block text-sm font-medium text-gray-700 mb-1">
                                    E-posta Adresi <span class="text-rose-500">*</span>
                                </label>
                                <div class="relative">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-envelope text-gray-400"></i>
                                    </div>
                                    <input type="email"
                                           id="Email"
                                           name="Email"
                                           value="@Model.Email"
                                           class="w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                                           placeholder="ornek@email.com"
                                           required />
                                </div>
                                <span asp-validation-for="Email" class="text-rose-500 text-xs mt-1 block"></span>
                            </div>

                            <!-- Username -->
                            <div>
                                <label for="Username" class="block text-sm font-medium text-gray-700 mb-1">
                                    Kullanıcı Adı <span class="text-rose-500">*</span>
                                </label>
                                <div class="relative">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-user text-gray-400"></i>
                                    </div>
                                    <input type="text"
                                           id="Username"
                                           name="Username"
                                           value="@Model.Username"
                                           class="w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                                           placeholder="Benzersiz kullanıcı adı"
                                           required />
                                </div>
                                <span asp-validation-for="Username" class="text-rose-500 text-xs mt-1 block"></span>
                            </div>
                        </div>

                        <!-- İkinci Kolon: Şifre -->
                        <div class="space-y-4">
                            <div class="border-l-4 border-orange-500 pl-4">
                                <h2 class="text-lg font-semibold text-gray-900 flex items-center">
                                    <i class="fas fa-lock mr-2 text-orange-500"></i>
                                    Şifre Güncelleme
                                </h2>
                            </div>

                            <!-- New Password -->
                            <div>
                                <label for="NewPassword" class="block text-sm font-medium text-gray-700 mb-1">
                                    Yeni Şifre
                                </label>
                                <div class="relative">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-key text-gray-400"></i>
                                    </div>
                                    <input type="password"
                                           id="NewPassword"
                                           name="NewPassword"
                                           class="w-full pl-10 pr-10 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-colors"
                                           placeholder="Boş bırakırsanız değişmez"
                                           minlength="6" />
                                    <button type="button" onclick="togglePassword('NewPassword')" class="absolute inset-y-0 right-0 pr-3 flex items-center">
                                        <i class="fas fa-eye text-gray-400 hover:text-gray-600"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="NewPassword" class="text-rose-500 text-xs mt-1 block"></span>
                                <p class="text-xs text-gray-500 mt-1">Değiştirmek istemiyorsanız boş bırakın. En az 6 karakter olmalıdır.</p>
                            </div>

                            <!-- Password Strength Indicator -->
                            <div id="passwordStrength" class="hidden">
                                <p class="text-xs font-medium text-gray-700 mb-1">Şifre Güvenliği</p>
                                <div class="w-full bg-gray-200 rounded-full h-2">
                                    <div id="strengthBar" class="h-2 rounded-full transition-all duration-300"></div>
                                </div>
                                <p id="strengthText" class="text-xs mt-1"></p>
                            </div>

                            <!-- Info Box -->
                            <div class="bg-amber-50 border border-amber-200 rounded-lg p-4">
                                <div class="flex items-start">
                                    <i class="fas fa-exclamation-triangle text-amber-600 mr-2 mt-0.5"></i>
                                    <div class="text-sm text-amber-700">
                                        <p class="font-medium mb-1">Şifre Güvenliği</p>
                                        <ul class="text-xs space-y-1">
                                            <li>• En az 6 karakter uzunluğunda</li>
                                            <li>• Büyük ve küçük harf kombinasyonu</li>
                                            <li>• En az bir rakam içermeli</li>
                                            <li>• Özel karakter kullanımı önerilir</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Üçüncü Kolon: Rol ve Müşteri -->
                        <div class="space-y-4">
                            <div class="border-l-4 border-purple-500 pl-4">
                                <h2 class="text-lg font-semibold text-gray-900 flex items-center">
                                    <i class="fas fa-shield-alt mr-2 text-purple-500"></i>
                                    Rol ve Yetkilendirme
                                </h2>
                            </div>

                            <!-- Role Selection -->
                            <div class="space-y-3">
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    Kullanıcı Rolü <span class="text-rose-500">*</span>
                                </label>

                                <div class="role-card border-2 border-gray-200 rounded-lg p-4 cursor-pointer hover:border-purple-300 transition-all @(Model.Role == TicketSystem.Domain.Enums.UserRole.Admin ? "border-purple-300 bg-purple-50" : "")"
                                     onclick="selectRole('1')">
                                    <div class="flex items-center">
                                        <input type="radio"
                                               id="RoleAdmin"
                                               name="Role"
                                               value="1"
                                               @(Model.Role == TicketSystem.Domain.Enums.UserRole.Admin ? "checked" : "")
                                               class="h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300"
                                               required>
                                        <div class="ml-3 flex-1">
                                            <div class="flex items-center">
                                                <i class="fas fa-shield-alt text-purple-600 mr-2"></i>
                                                <span class="font-medium text-gray-900">Admin</span>
                                            </div>
                                            <p class="text-sm text-gray-500 mt-1">Sistem yöneticisi - Tam erişim</p>
                                        </div>
                                    </div>
                                </div>

                                <div class="role-card border-2 border-gray-200 rounded-lg p-4 cursor-pointer hover:border-blue-300 transition-all @(Model.Role == TicketSystem.Domain.Enums.UserRole.Customer ? "border-blue-300 bg-blue-50" : "")"
                                     onclick="selectRole('2')">
                                    <div class="flex items-center">
                                        <input type="radio"
                                               id="RoleCustomer"
                                               name="Role"
                                               value="2"
                                               @(Model.Role == TicketSystem.Domain.Enums.UserRole.Customer ? "checked" : "")
                                               class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300"
                                               required>
                                        <div class="ml-3 flex-1">
                                            <div class="flex items-center">
                                                <i class="fas fa-user text-blue-600 mr-2"></i>
                                                <span class="font-medium text-gray-900">Müşteri</span>
                                            </div>
                                            <p class="text-sm text-gray-500 mt-1">Ticket oluşturucu - Kısıtlı erişim</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <span asp-validation-for="Role" class="text-rose-500 text-xs mt-1 block"></span>

                            <!-- Customer Selection -->
                            <div id="customerField" class="@(Model.Role == TicketSystem.Domain.Enums.UserRole.Customer ? "" : "hidden")">
                                <label for="CustomerId" class="block text-sm font-medium text-gray-700 mb-1">
                                    Bağlı Müşteri <span class="text-rose-500">*</span>
                                </label>
                                <select id="CustomerId"
                                        name="CustomerId"
                                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors">
                                    <option value="">Müşteri seçiniz</option>
                                    @if (customers != null)
                                    {
                                        @foreach (var customer in customers)
                                        {
                                            <option value="@customer.Id" @(Model.CustomerId == customer.Id ? "selected" : "")>@customer.Name</option>
                                        }
                                    }
                                </select>
                                <span asp-validation-for="CustomerId" class="text-rose-500 text-xs mt-1 block"></span>
                                <p class="text-xs text-gray-500 mt-1">Müşteri kullanıcıları sadece bağlı oldukları firmanın ticketlarını görebilir</p>
                            </div>
                        </div>

                        <!-- Sağ Kolon: Durum ve Bilgiler -->
                        <div class="space-y-4">
                            <div class="border-l-4 border-green-500 pl-4">
                                <h2 class="text-lg font-semibold text-gray-900 flex items-center">
                                    <i class="fas fa-toggle-on mr-2 text-green-500"></i>
                                    Hesap Durumu
                                </h2>
                            </div>

                            <!-- Account Status -->
                            <div class="space-y-3">
                                <div class="border rounded-lg p-4 @(Model.IsActive ? "border-green-300 bg-green-50" : "border-red-300 bg-red-50")">
                                    <div class="flex items-center justify-between">
                                        <div>
                                            <p class="text-sm font-medium text-gray-700">Hesap Durumu</p>
                                            <p class="text-xs text-gray-500 mt-1">Kullanıcının sisteme erişimi</p>
                                        </div>
                                        <label class="relative inline-flex items-center cursor-pointer">
                                            <input type="checkbox"
                                                   id="IsActive"
                                                   name="IsActive"
                                                   value="true"
                                                   @(Model.IsActive ? "checked" : "")
                                                   class="sr-only peer">
                                            <input type="hidden" name="IsActive" value="false" />
                                            <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                            <span class="ml-3 text-sm font-medium @(Model.IsActive ? "text-green-600" : "text-red-600")">
                                                @(Model.IsActive ? "Aktif" : "Pasif")
                                            </span>
                                        </label>
                                    </div>
                                </div>

                                <!-- User Stats -->
                                <div class="bg-gray-50 rounded-lg p-4 space-y-2">
                                    <h3 class="text-sm font-medium text-gray-700 mb-2">Kullanıcı Bilgileri</h3>
                                    <div class="space-y-1 text-xs">
                                        <div class="flex justify-between">
                                            <span class="text-gray-500">Kullanıcı ID:</span>
                                            <span class="font-medium text-gray-900">#@Model.Id</span>
                                        </div>
                                        <div class="flex justify-between">
                                            <span class="text-gray-500">Mevcut Rol:</span>
                                            <span class="font-medium text-gray-900">
                                                @(Model.Role == TicketSystem.Domain.Enums.UserRole.Admin ? "Admin" : "Müşteri")
                                            </span>
                                        </div>
                                        @if (Model.CustomerId.HasValue)
                                        {
                                            <div class="flex justify-between">
                                                <span class="text-gray-500">Müşteri:</span>
                                                <span class="font-medium text-gray-900">
                                                    @(customers?.FirstOrDefault(c => c.Id == Model.CustomerId)?.Name ?? "Bilinmiyor")
                                                </span>
                                            </div>
                                        }
                                    </div>
                                </div>

                                <!-- Warning Box -->
                                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                                    <div class="flex items-start">
                                        <i class="fas fa-info-circle text-blue-600 mr-2 mt-0.5"></i>
                                        <div class="text-sm text-blue-700">
                                            <p class="font-medium mb-1">Önemli Notlar</p>
                                            <ul class="text-xs space-y-1">
                                                <li>• Rol değişikliği kullanıcının tüm yetkilerini etkiler</li>
                                                <li>• Pasif kullanıcılar sisteme giriş yapamaz</li>
                                                <li>• E-posta adresi benzersiz olmalıdır</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons - Fixed Bottom -->
                    <div class="flex items-center justify-between pt-6 mt-6 border-t border-gray-200">
                        <button type="button"
                                onclick="if(confirm('Bu kullanıcıyı silmek istediğinizden emin misiniz?')) { document.getElementById('deleteForm').submit(); }"
                                class="px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition-colors flex items-center">
                            <i class="fas fa-trash mr-2"></i>
                            Kullanıcıyı Sil
                        </button>

                        <div class="flex items-center space-x-4">
                            <a href="@Url.Action("Index")"
                               class="px-6 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors">
                                İptal
                            </a>
                            <button type="submit"
                                    id="submitBtn"
                                    class="px-8 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center">
                                <i class="fas fa-save mr-2"></i>
                                Değişiklikleri Kaydet
                            </button>
                        </div>
                    </div>
                </form>

                <!-- Hidden Delete Form -->
                <form id="deleteForm" method="post" asp-action="Delete" asp-route-id="@Model.Id" class="hidden">
                    @Html.AntiForgeryToken()
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function hideAlert(button) {
        const alert = button.closest('.alert-message');
        alert.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
        alert.style.opacity = '0';
        alert.style.transform = 'translateY(-10px)';
        setTimeout(() => alert.remove(), 300);
    }

    function togglePassword(fieldId) {
        const field = document.getElementById(fieldId);
        const icon = event.currentTarget.querySelector('i');

        if (field.type === 'password') {
            field.type = 'text';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            field.type = 'password';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    }

    function selectRole(roleValue) {
        const radioButton = document.querySelector(`input[value="${roleValue}"]`);
        if (radioButton) {
            radioButton.checked = true;
        }

        // Role card styling
        document.querySelectorAll('.role-card').forEach(card => {
            card.classList.remove('border-purple-300', 'border-blue-300', 'bg-purple-50', 'bg-blue-50');
            card.classList.add('border-gray-200');
        });

        const selectedCard = event.currentTarget;
        if (roleValue === '1') { // Admin
            selectedCard.classList.remove('border-gray-200');
            selectedCard.classList.add('border-purple-300', 'bg-purple-50');
        } else { // Customer
            selectedCard.classList.remove('border-gray-200');
            selectedCard.classList.add('border-blue-300', 'bg-blue-50');
        }

        toggleCustomerField();
    }

    function toggleCustomerField() {
        const customerRole = '2';
        const selectedRole = document.querySelector('input[name="Role"]:checked');
        const customerField = document.getElementById('customerField');

        if (selectedRole && selectedRole.value === customerRole) {
            customerField.classList.remove('hidden');
            const customerSelect = document.getElementById('CustomerId');
            if (customerSelect) {
                customerSelect.setAttribute('required', 'required');
            }
        } else {
            customerField.classList.add('hidden');
            const customerSelect = document.getElementById('CustomerId');
            if (customerSelect) {
                customerSelect.removeAttribute('required');
                customerSelect.value = '';
            }
        }
    }

    function checkPasswordStrength(password) {
        const strengthBar = document.getElementById('strengthBar');
        const strengthText = document.getElementById('strengthText');
        const strengthContainer = document.getElementById('passwordStrength');

        if (!password) {
            strengthContainer.classList.add('hidden');
            return;
        }

        strengthContainer.classList.remove('hidden');

        let strength = 0;
        if (password.length >= 6) strength++;
        if (password.length >= 10) strength++;
        if (/[a-z]/.test(password) && /[A-Z]/.test(password)) strength++;
        if (/\d/.test(password)) strength++;
        if (/[^a-zA-Z\d]/.test(password)) strength++;

        const strengthLevels = [
            { width: '20%', color: 'bg-red-500', text: 'Çok Zayıf', textColor: 'text-red-600' },
            { width: '40%', color: 'bg-orange-500', text: 'Zayıf', textColor: 'text-orange-600' },
            { width: '60%', color: 'bg-yellow-500', text: 'Orta', textColor: 'text-yellow-600' },
            { width: '80%', color: 'bg-blue-500', text: 'Güçlü', textColor: 'text-blue-600' },
            { width: '100%', color: 'bg-green-500', text: 'Çok Güçlü', textColor: 'text-green-600' }
        ];

        const level = strengthLevels[Math.min(strength, 4)];
        strengthBar.className = `h-2 rounded-full transition-all duration-300 ${level.color}`;
        strengthBar.style.width = level.width;
        strengthText.className = `text-xs mt-1 ${level.textColor}`;
        strengthText.textContent = level.text;
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Role change handler
        document.querySelectorAll('input[name="Role"]').forEach(radio => {
            radio.addEventListener('change', toggleCustomerField);
        });

        // Initial toggle
        toggleCustomerField();

        // Password strength checker
        const passwordField = document.getElementById('NewPassword');
        if (passwordField) {
            passwordField.addEventListener('input', function() {
                checkPasswordStrength(this.value);
            });
        }

        // IsActive toggle visual feedback
        const isActiveCheckbox = document.getElementById('IsActive');
        if (isActiveCheckbox) {
            isActiveCheckbox.addEventListener('change', function() {
                const statusCard = this.closest('.border');
                const statusText = this.parentElement.querySelector('span.ml-3');

                if (this.checked) {
                    statusCard.className = 'border rounded-lg p-4 border-green-300 bg-green-50';
                    statusText.className = 'ml-3 text-sm font-medium text-green-600';
                    statusText.textContent = 'Aktif';
                } else {
                    statusCard.className = 'border rounded-lg p-4 border-red-300 bg-red-50';
                    statusText.className = 'ml-3 text-sm font-medium text-red-600';
                    statusText.textContent = 'Pasif';
                }
            });
        }

        // Form submission handler
        const form = document.querySelector('form');
        const submitBtn = document.getElementById('submitBtn');

        if (form && submitBtn) {
            form.addEventListener('submit', function(e) {
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Kaydediliyor...';
                submitBtn.disabled = true;
            });
        }

        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            document.querySelectorAll('.alert-message').forEach(alert => {
                const button = alert.querySelector('button');
                if (button) hideAlert(button);
            });
        }, 5000);
    });
</script>