@model TicketSystem.Application.Common.Models.PaginatedList<TicketSystem.Application.Features.Tickets.DTOs.TicketListDto>
@{
    ViewData["Title"] = "Ticket Yönetimi";
}

<!-- Header -->
<div class="bg-white border-b border-gray-200 mb-6">
    <div class="px-6 py-4">
        <div class="flex items-center justify-between">
            <div>
                <h1 class="text-2xl font-bold text-gray-900">Ticket Yönetimi</h1>
                <p class="text-gray-600 text-sm mt-1">Müşteri taleplerini inceleyin ve yönetin</p>
            </div>
            <!-- Özet Stats -->
            <div class="flex items-center space-x-3">
                @{
                    var awaitingTickets = Model.Items.Where(x => x.StatusDisplay == "İnceleniyor").ToList();
                    var inProgressTickets = Model.Items.Where(x => x.StatusDisplay == "İşlemde").ToList();
                    var resolvedTickets = Model.Items.Where(x => x.StatusDisplay == "Çözüldü").ToList();
                }

                <div class="bg-amber-50 border border-amber-200 px-3 py-2 rounded-lg">
                    <div class="text-lg font-bold text-amber-800">@awaitingTickets.Count</div>
                    <div class="text-xs text-amber-600">Bekleyen</div>
                </div>
                <div class="bg-blue-50 border border-blue-200 px-3 py-2 rounded-lg">
                    <div class="text-lg font-bold text-blue-800">@inProgressTickets.Count</div>
                    <div class="text-xs text-blue-600">İşlemde</div>
                </div>
                <div class="bg-emerald-50 border border-emerald-200 px-3 py-2 rounded-lg">
                    <div class="text-lg font-bold text-emerald-800">@resolvedTickets.Count</div>
                    <div class="text-xs text-emerald-600">Çözülen</div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="px-6 mb-6">
    <div class="bg-white rounded-lg shadow-sm border p-4">
        <form method="get" id="filterForm" class="space-y-4">
            <!-- Ana Filtreler -->
            <div class="flex items-center space-x-4">
                <!-- Arama -->
                <div class="flex-1">
                    <div class="relative">
                        <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                        <input type="text" name="SearchTerm" value="@Context.Request.Query["SearchTerm"]"
                               placeholder="Ticket #, müşteri adı veya başlık ara..."
                               class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    </div>
                </div>

                <!-- Durum Filtreleri -->
                <div class="flex items-center space-x-2">
                    <select name="Status" class="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
                        <option value="">Tüm Durumlar</option>
                        <option value="İnceleniyor" @(Context.Request.Query["Status"] == "İnceleniyor" ? "selected" : "")>İnceleniyor</option>
                        <option value="İşlemde" @(Context.Request.Query["Status"] == "İşlemde" ? "selected" : "")>İşlemde</option>
                        <option value="Çözüldü" @(Context.Request.Query["Status"] == "Çözüldü" ? "selected" : "")>Çözüldü</option>
                        <option value="Reddedildi" @(Context.Request.Query["Status"] == "Reddedildi" ? "selected" : "")>Reddedildi</option>
                    </select>
                </div>

                <!-- Kapalı Ticketları Göster -->
                <div class="flex items-center">
                    <label class="flex items-center text-sm">
                        <input type="checkbox" name="IncludeClosed" value="true"
                               @(Context.Request.Query["IncludeClosed"] == "true" ? "checked" : "")
                               class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mr-2">
                        <span class="text-gray-700">Kapalı ticketları göster</span>
                    </label>
                </div>

                <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm">
                    <i class="fas fa-search mr-1"></i>Filtrele
                </button>
            </div>

            <!-- Gelişmiş Filtreler (Daraltılabilir) -->
            <div id="advancedFilters" class="hidden pt-4 border-t border-gray-200">
                <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                    <select name="CustomerId" class="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
                        <option value="">Tüm Müşteriler</option>
                        @foreach (var customer in Model.Items.GroupBy(x => x.CustomerName).Select(g => new { Name = g.Key, Id = g.First().Id }).OrderBy(x => x.Name))
                        {
                            <option value="@customer.Id" @(Context.Request.Query["CustomerId"] == customer.Id.ToString() ? "selected" : "")>@customer.Name</option>
                        }
                    </select>

                    <select name="TypeId" class="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
                        <option value="">Tüm Türler</option>
                        @foreach (var type in Model.Items.GroupBy(x => x.TypeName).Select(g => g.First()).OrderBy(x => x.TypeName))
                        {
                            <option value="@type.Id">@type.TypeName</option>
                        }
                    </select>

                    <select name="DateRange" class="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
                        <option value="">Tüm Tarihler</option>
                        <option value="today" @(Context.Request.Query["DateRange"] == "today" ? "selected" : "")>Bugün</option>
                        <option value="week" @(Context.Request.Query["DateRange"] == "week" ? "selected" : "")>Bu Hafta</option>
                        <option value="month" @(Context.Request.Query["DateRange"] == "month" ? "selected" : "")>Bu Ay</option>
                    </select>

                    <select name="SortBy" class="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
                        <option value="CreatedAt">En Yeni</option>
                        <option value="UpdatedAt" @(Context.Request.Query["SortBy"] == "UpdatedAt" ? "selected" : "")>Son Güncelleme</option>
                        <option value="Status" @(Context.Request.Query["SortBy"] == "Status" ? "selected" : "")>Durum</option>
                        <option value="Customer" @(Context.Request.Query["SortBy"] == "Customer" ? "selected" : "")>Müşteri</option>
                    </select>
                </div>
            </div>

            <div class="flex items-center justify-between">
                <button type="button" id="advancedToggle" class="text-sm text-blue-600 hover:text-blue-800">
                    <i class="fas fa-chevron-down mr-1"></i>Gelişmiş Filtreler
                </button>

                @if (Context.Request.Query.Any())
                {
                    <a href="@Url.Action("Index")" class="text-sm text-gray-600 hover:text-gray-800">
                        <i class="fas fa-times mr-1"></i>Filtreleri Temizle
                    </a>
                }
            </div>
        </form>
    </div>
</div>

<!-- Ticket List -->
<div class="px-6">
    @if (Model.Items.Any())
    {
        <div class="space-y-3">
            @foreach (var ticket in Model.Items)
            {
                var timeAgo = DateTime.Now - ticket.CreatedAt;
                var isUrgent = ticket.StatusDisplay == "İnceleniyor" && timeAgo.TotalHours > 24;
                var timeText = timeAgo.Days > 0 ? $"{timeAgo.Days} gün" :
                timeAgo.Hours > 0 ? $"{timeAgo.Hours} saat" :
                $"{timeAgo.Minutes} dakika";

                <div class="ticket-card @(isUrgent ? "urgent" : "") bg-white rounded-lg shadow-sm border border-gray-200 hover:shadow-md transition-all duration-200">
                    <div class="p-4">
                        <div class="flex items-start justify-between">

                            <!-- Sol: Ana İçerik -->
                            <div class="flex items-start space-x-3 flex-1">
                                <!-- Status Göstergesi -->
                                <div class="flex flex-col items-center">
                                    <div class="w-3 h-3 rounded-full mb-1" style="background-color: @ticket.TypeColor"></div>
                                    @if (isUrgent)
                                    {
                                        <i class="fas fa-exclamation-triangle text-red-500 text-xs animate-pulse"></i>
                                    }
                                </div>

                                <!-- İçerik -->
                                <div class="flex-1 min-w-0">
                                    <!-- Başlık ve Durum -->
                                    <div class="flex items-center space-x-3 mb-2">
                                        <h3 class="text-lg font-semibold text-gray-900">
                                            <a href="@Url.Action("Details", new { id = ticket.Id })" class="hover:text-blue-600 transition-colors">
                                                #@ticket.TicketNumber
                                            </a>
                                        </h3>

                                        <span class="status-badge @(ticket.StatusDisplay == "İnceleniyor" ? "bg-amber-100 text-amber-800" :
                                                                                                                  ticket.StatusDisplay == "İşlemde" ? "bg-blue-100 text-blue-800" :
                                                                                                                  ticket.StatusDisplay == "Çözüldü" ? "bg-emerald-100 text-emerald-800" :
                                                                                                                  ticket.StatusDisplay == "Kapandı" ? "bg-gray-100 text-gray-800" :
                                                                                                                  "bg-red-100 text-red-800")">
                                    @ticket.StatusDisplay
                                </span>

                                @if (ticket.CommentCount > 0)
                                        {
                                            <span class="bg-blue-50 text-blue-700 px-2 py-1 rounded-full text-xs">
                                                <i class="fas fa-comment mr-1"></i>@ticket.CommentCount
                                            </span>
                                        }
                                    </div>

                                    <!-- Ticket Başlığı -->
                                    <h4 class="text-sm font-medium text-gray-800 mb-2 line-clamp-2">
                                        @ticket.Title
                                    </h4>

                                    <!-- Meta Bilgiler -->
                                    <div class="flex items-center space-x-4 text-xs text-gray-500">
                                        <div class="flex items-center">
                                            <i class="fas fa-building text-blue-500 mr-1"></i>
                                            <span class="font-medium">@ticket.CustomerName</span>
                                        </div>
                                        <div class="flex items-center">
                                            <i class="fas fa-tag text-emerald-500 mr-1"></i>
                                            <span>@ticket.TypeName</span>
                                        </div>
                                        <div class="flex items-center">
                                            <i class="fas fa-clock text-gray-400 mr-1"></i>
                                            <span>@timeText önce</span>
                                        </div>
                                        <div class="flex items-center">
                                            <i class="fas fa-calendar text-gray-400 mr-1"></i>
                                            <span>@ticket.CreatedAt.ToString("dd.MM.yyyy HH:mm")</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Sağ: Detay Butonu -->
                            <div class="ml-4">
                                <a href="@Url.Action("Details", new { id = ticket.Id })"
                                   class="inline-flex items-center px-3 py-2 bg-gray-50 hover:bg-gray-100 text-gray-700 text-sm rounded-lg border transition-colors">
                                    <i class="fas fa-eye mr-2"></i>Detay
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center py-12">
            <div class="bg-white rounded-lg shadow-sm border p-8">
                <i class="fas fa-search text-gray-300 text-4xl mb-4"></i>
                <h3 class="text-lg font-semibold text-gray-900 mb-2">Sonuç Bulunamadı</h3>
                <p class="text-gray-600 mb-4">Arama kriterlerinize uygun ticket bulunamadı.</p>
                @if (Context.Request.Query.Any())
                {
                    <a href="@Url.Action("Index")" class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                        <i class="fas fa-redo mr-2"></i>Filtreleri Temizle
                    </a>
                }
            </div>
        </div>
    }
</div>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <div class="px-6 mt-6">
        <div class="bg-white rounded-lg shadow-sm border p-4">
            <div class="flex items-center justify-between">
                <div class="text-sm text-gray-600">
                    Toplam @Model.TotalCount kayıttan @((Model.PageNumber - 1) * Model.PageSize + 1)-@(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount)) arası gösteriliyor
                </div>

                <div class="flex items-center space-x-1">
                    @if (Model.HasPreviousPage)
                    {
                        <a href="?Page=@(Model.PageNumber - 1)&@Context.Request.QueryString.Value?.Replace($"Page={Model.PageNumber}", "").TrimStart('&')"
                           class="px-3 py-2 border border-gray-300 rounded-md text-sm hover:bg-gray-50">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    }

                    @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                    {
                        <a href="?Page=@i&@Context.Request.QueryString.Value?.Replace($"Page={Model.PageNumber}", "").TrimStart('&')"
                           class="px-3 py-2 border text-sm rounded-md @(i == Model.PageNumber ? "bg-blue-600 text-white border-blue-600" : "border-gray-300 hover:bg-gray-50")">
                            @i
                        </a>
                    }

                    @if (Model.HasNextPage)
                    {
                        <a href="?Page=@(Model.PageNumber + 1)&@Context.Request.QueryString.Value?.Replace($"Page={Model.PageNumber}", "").TrimStart('&')"
                           class="px-3 py-2 border border-gray-300 rounded-md text-sm hover:bg-gray-50">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
}

<style>
    /* Ticket Cards */
    .ticket-card {
        transition: all 0.2s ease;
    }

        .ticket-card:hover {
            transform: translateY(-1px);
            border-color: #3b82f6;
        }

        .ticket-card.urgent {
            border-left: 4px solid #f59e0b;
            background: linear-gradient(135deg, #fffbeb 0%, #fef3c7 100%);
        }

    /* Status Badge */
    .status-badge {
        padding: 0.25rem 0.75rem;
        font-size: 0.75rem;
        font-weight: 600;
        border-radius: 9999px;
        text-transform: uppercase;
        letter-spacing: 0.025em;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .ticket-card .flex

    {
        flex-direction: column;
        space-y: 3;
    }

    }

    /* Line Clamp */
    .line-clamp-2 {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Gelişmiş filtreler toggle
            const advancedToggle = document.getElementById('advancedToggle');
            const advancedFilters = document.getElementById('advancedFilters');

            advancedToggle.addEventListener('click', function() {
                const isHidden = advancedFilters.classList.contains('hidden');
                advancedFilters.classList.toggle('hidden');

                const icon = this.querySelector('i');
                const text = this.querySelector('span') || this.lastChild;

                if (isHidden) {
                    icon.className = 'fas fa-chevron-up mr-1';
                    this.innerHTML = '<i class="fas fa-chevron-up mr-1"></i>Gelişmiş Filtreler';
                } else {
                    icon.className = 'fas fa-chevron-down mr-1';
                    this.innerHTML = '<i class="fas fa-chevron-down mr-1"></i>Gelişmiş Filtreler';
                }
            });

            // Otomatik form gönderimi (isteğe bağlı)
            const statusSelect = document.querySelector('select[name="Status"]');
            const includeClosedCheckbox = document.querySelector('input[name="IncludeClosed"]');

            statusSelect?.addEventListener('change', function() {
                // document.getElementById('filterForm').submit();
            });

            includeClosedCheckbox?.addEventListener('change', function() {
                document.getElementById('filterForm').submit();
            });
        });
    </script>
}