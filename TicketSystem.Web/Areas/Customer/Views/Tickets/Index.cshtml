@model TicketSystem.Application.Common.Models.PaginatedList<TicketSystem.Application.Features.Tickets.DTOs.TicketListDto>
@{
    ViewData["Title"] = "Ticket'larım";
}

<!-- Filters -->
<div class="bg-white p-6 rounded-lg shadow mb-6">
    <form method="get" class="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Arama</label>
            <input type="text" name="SearchTerm" value="@Context.Request.Query["SearchTerm"]"
                   placeholder="Ticket No, Başlık..."
                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500">
        </div>

        <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Durum</label>
            <select name="Status" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                <option value="">Tümü</option>
                <option value="İnceleniyor" @(Context.Request.Query["Status"] == "İnceleniyor" ? "selected" : "")>İnceleniyor</option>
                <option value="İşlemde" @(Context.Request.Query["Status"] == "İşlemde" ? "selected" : "")>İşlemde</option>
                <option value="Çözüldü" @(Context.Request.Query["Status"] == "Çözüldü" ? "selected" : "")>Çözüldü</option>
                <option value="Kapandı" @(Context.Request.Query["Status"] == "Kapandı" ? "selected" : "")>Kapandı</option>
            </select>
        </div>

        <div class="flex items-end">
            <button type="submit" class="w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700">
                <i class="fas fa-search mr-2"></i>Filtrele
            </button>
        </div>
    </form>
</div>

<!-- Create New Ticket Button -->
@* <div class="mb-6">
    <a href="@Url.Action("Create")" class="inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700">
        <i class="fas fa-plus mr-2"></i>Yeni Ticket Oluştur
    </a>
</div> *@

<!-- Tickets List -->
<div class="bg-white rounded-lg shadow overflow-hidden">
    <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-medium text-gray-900">Ticket'larım (@Model.TotalCount)</h3>
    </div>

    @if (Model.Items.Any())
    {
        <div class="divide-y divide-gray-200">
            @foreach (var ticket in Model.Items)
            {
                <div class="px-6 py-4 hover:bg-gray-50">
                    <div class="flex items-center justify-between">
                        <div class="flex-1">
                            <div class="flex items-center mb-2">
                                <span class="text-sm font-medium text-gray-900">@ticket.TicketNumber</span>
                                <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full ml-3
                                            @(ticket.StatusDisplay == "İnceleniyor" ? "bg-yellow-100 text-yellow-800" :
                                                                            ticket.StatusDisplay == "İşlemde" ? "bg-blue-100 text-blue-800" :
                                                                            ticket.StatusDisplay == "Çözüldü" ? "bg-green-100 text-green-800" :
                                                                            "bg-gray-100 text-gray-800")">
                            @ticket.StatusDisplay
                        </span>
                    </div>
                    <h4 class="text-lg font-medium text-gray-900 mb-2">@ticket.Title</h4>
                    <div class="flex items-center text-sm text-gray-500">
                        <div class="w-3 h-3 rounded-full mr-2" style="background-color: @ticket.TypeColor"></div>
                        <span>@ticket.TypeName</span>
                        <span class="mx-2">•</span>
                        <span>@ticket.CategoryName</span>
                        <span class="mx-2">•</span>
                        <span>@ticket.CreatedAt.ToString("dd.MM.yyyy HH:mm")</span>
                        @if (ticket.CommentCount > 0)
                                {
                                    <span class="mx-2">•</span>
                                    <i class="fas fa-comment text-xs mr-1"></i>
                                    <span>@ticket.CommentCount yorum</span>
                                }
                            </div>
                        </div>
                        <a href="@Url.Action("Details", new { id = ticket.Id })"
                           class="ml-4 inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
                            <i class="fas fa-eye mr-2"></i>Detay
                        </a>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination (same as admin) -->
        @if (Model.TotalPages > 1)
        {
            <div class="px-6 py-4 border-t border-gray-200">
                <div class="flex items-center justify-between">
                    <div class="text-sm text-gray-700">
                        @((Model.PageNumber - 1) * Model.PageSize + 1) - @(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount))
                        / @Model.TotalCount kayıt gösteriliyor
                    </div>
                    <div class="flex space-x-1">
                        @if (Model.HasPreviousPage)
                        {
                            <a href="?Page=@(Model.PageNumber - 1)&@Context.Request.QueryString.Value?.Replace($"Page={Model.PageNumber}", "").TrimStart('&')"
                               class="px-3 py-2 text-sm bg-white border border-gray-300 rounded-md hover:bg-gray-50">
                                Önceki
                            </a>
                        }

                        @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                        {
                            <a href="?Page=@i&@Context.Request.QueryString.Value?.Replace($"Page={Model.PageNumber}", "").TrimStart('&')"
                               class="px-3 py-2 text-sm @(i == Model.PageNumber ? "bg-blue-600 text-white" : "bg-white text-gray-700 hover:bg-gray-50") border border-gray-300 rounded-md">
                                @i
                            </a>
                        }

                        @if (Model.HasNextPage)
                        {
                            <a href="?Page=@(Model.PageNumber + 1)&@Context.Request.QueryString.Value?.Replace($"Page={Model.PageNumber}", "").TrimStart('&')"
                               class="px-3 py-2 text-sm bg-white border border-gray-300 rounded-md hover:bg-gray-50">
                                Sonraki
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="text-center py-12">
            <i class="fas fa-ticket-alt text-gray-400 text-4xl mb-4"></i>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Ticket bulunamadı</h3>
            <p class="text-gray-500 mb-4">Henüz hiç ticket oluşturmamışsınız.</p>
            <a href="@Url.Action("Create")"
               class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                <i class="fas fa-plus mr-2"></i>İlk Ticket'ınızı Oluşturun
            </a>
        </div>
    }
</div>