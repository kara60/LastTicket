@model TicketSystem.Application.Common.Models.PaginatedList<TicketSystem.Application.Features.Tickets.DTOs.TicketListDto>
@{
    ViewData["Title"] = "Ticket'larım";
}

<!-- Compact Header with Filters -->
<div class="bg-white rounded-lg shadow-sm border border-gray-200 mb-4 p-4">
    <div class="flex flex-col md:flex-row md:items-center justify-between gap-4">
        <h1 class="text-xl font-bold text-gray-900">Ticket'larım</h1>

        <!-- Real-time Filters -->
        <div class="flex flex-wrap items-center gap-3">
            <div class="relative">
                <input type="text" id="searchInput" placeholder="Arama..."
                       value="@Context.Request.Query["SearchTerm"]"
                       class="w-48 pl-8 pr-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                <i class="fas fa-search absolute left-2.5 top-2.5 text-gray-400 text-sm"></i>
            </div>

            <select id="statusFilter" class="px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-1 focus:ring-blue-500">
                <option value="">Tüm Durumlar</option>
                <option value="İnceleniyor" @(Context.Request.Query["Status"] == "İnceleniyor" ? "selected" : "")>İnceleniyor</option>
                <option value="İşlemde" @(Context.Request.Query["Status"] == "İşlemde" ? "selected" : "")>İşlemde</option>
                <option value="Çözüldü" @(Context.Request.Query["Status"] == "Çözüldü" ? "selected" : "")>Çözüldü</option>
            </select>

            <label class="flex items-center text-sm">
                <input type="checkbox" id="showClosedTickets" @(Context.Request.Query["ShowClosed"] == "true" ? "checked" : "")
                       class="rounded border-gray-300 text-blue-600 focus:ring-1 focus:ring-blue-500 mr-2">
                Kapalı ticket'ları göster
            </label>

            <select id="pageSizeFilter" class="px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-1 focus:ring-blue-500">
                <option value="20" @(Context.Request.Query["PageSize"] == "20" ? "selected" : "")>20</option>
                <option value="50" @(Context.Request.Query["PageSize"] == "50" ? "selected" : "")>50</option>
                <option value="100" @(Context.Request.Query["PageSize"] == "100" ? "selected" : "")>100</option>
            </select>
        </div>
    </div>

    <div class="text-xs text-gray-500 mt-2">
        <i class="fas fa-info-circle mr-1"></i>
        @Model.TotalCount sonuçtan @Model.Items.Count() gösteriliyor
    </div>
</div>

<!-- Compact Tickets Table -->
@if (Model.Items.Any())
{
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ticket</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Başlık</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tür/Kategori</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Durum</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tarih</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Yorumlar</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">İşlem</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var ticket in Model.Items)
                    {
                        <tr class="hover:bg-gray-50 @(ticket.StatusDisplay == "Kapandı" ? "opacity-60" : "")">
                            <!-- Ticket Number -->
                            <td class="px-4 py-3 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="w-2 h-2 rounded-full mr-2" style="background-color: @ticket.TypeColor"></div>
                                    <span class="text-sm font-medium text-gray-900">#@ticket.TicketNumber</span>
                                </div>
                            </td>

                            <!-- Title -->
                            <td class="px-4 py-3">
                                <div class="text-sm font-medium text-gray-900 max-w-xs truncate" title="@ticket.Title">
                                    @ticket.Title
                                </div>
                            </td>

                            <!-- Type/Category -->
                            <td class="px-4 py-3 whitespace-nowrap">
                                <div class="text-xs text-gray-600">
                                    <div class="font-medium">@ticket.TypeName</div>
                                    <div class="text-gray-500">@ticket.CategoryName</div>
                                </div>
                            </td>

                            <!-- Status -->
                            <td class="px-4 py-3 whitespace-nowrap">
                                <span class="inline-flex items-center px-2 py-1 text-xs font-medium rounded-full
                                            @(ticket.StatusDisplay == "İnceleniyor" ? "bg-yellow-100 text-yellow-800" :
                                                                            ticket.StatusDisplay == "İşlemde" ? "bg-blue-100 text-blue-800" :
                                                                            ticket.StatusDisplay == "Çözüldü" ? "bg-green-100 text-green-800" :
                                                                            "bg-gray-100 text-gray-800")">
                            @switch (ticket.StatusDisplay)
                                    {
                                        case "İnceleniyor":
                                            <i class="fas fa-clock mr-1"></i>
                                            break;
                                        case "İşlemde":
                                            <i class="fas fa-cog mr-1"></i>
                                            break;
                                        case "Çözüldü":
                                            <i class="fas fa-check mr-1"></i>
                                            break;
                                        default:
                                            <i class="fas fa-times mr-1"></i>
                                            break;
                                    }
                                    @ticket.StatusDisplay
                                </span>
                            </td>

                            <!-- Date -->
                            <td class="px-4 py-3 whitespace-nowrap text-xs text-gray-500">
                                <div>@ticket.CreatedAt.ToString("dd.MM.yyyy")</div>
                                <div class="text-gray-400">@ticket.CreatedAt.ToString("HH:mm")</div>
                            </td>

                            <!-- Comments Count -->
                            <td class="px-4 py-3 whitespace-nowrap text-center">
                                @if (ticket.CommentCount > 0)
                                {
                                    <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full">
                                        <i class="fas fa-comments mr-1"></i>
                                        @ticket.CommentCount
                                    </span>
                                }
                                else
                                {
                                    <span class="text-xs text-gray-400">-</span>
                                }
                            </td>

                            <!-- Action -->
                            <td class="px-4 py-3 whitespace-nowrap text-right">
                                <a href="@Url.Action("Details", new { id = ticket.Id })"
                                   class="inline-flex items-center px-3 py-1 text-xs font-medium text-blue-600 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors">
                                    Detay <i class="fas fa-arrow-right ml-1"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Compact Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 mt-4 p-3">
            <div class="flex items-center justify-between">
                <div class="text-xs text-gray-600">
                    Sayfa @Model.PageNumber / @Model.TotalPages
                    (@((Model.PageNumber - 1) * Model.PageSize + 1)-@(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount)) / @Model.TotalCount)
                </div>

                <div class="flex items-center space-x-1">
                    @if (Model.HasPreviousPage)
                    {
                        <a href="#" onclick="changePage(1)"
                           class="px-2 py-1 text-xs bg-white border border-gray-300 rounded hover:bg-gray-50">
                            <i class="fas fa-angle-double-left"></i>
                        </a>
                        <a href="#" onclick="changePage(@(Model.PageNumber - 1))"
                           class="px-2 py-1 text-xs bg-white border border-gray-300 rounded hover:bg-gray-50">
                            <i class="fas fa-angle-left"></i>
                        </a>
                    }

                    @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                    {
                        <a href="#" onclick="changePage(@i)"
                           class="px-2 py-1 text-xs font-medium rounded @(i == Model.PageNumber ? "bg-blue-600 text-white" : "bg-white text-gray-700 hover:bg-gray-50 border border-gray-300")">
                            @i
                        </a>
                    }

                    @if (Model.HasNextPage)
                    {
                        <a href="#" onclick="changePage(@(Model.PageNumber + 1))"
                           class="px-2 py-1 text-xs bg-white border border-gray-300 rounded hover:bg-gray-50">
                            <i class="fas fa-angle-right"></i>
                        </a>
                        <a href="#" onclick="changePage(@Model.TotalPages)"
                           class="px-2 py-1 text-xs bg-white border border-gray-300 rounded hover:bg-gray-50">
                            <i class="fas fa-angle-double-right"></i>
                        </a>
                    }
                </div>
            </div>
        </div>
    }
}
else
{
    <!-- Compact Empty State -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center">
        <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <i class="fas fa-ticket-alt text-gray-400 text-2xl"></i>
        </div>
        <h3 class="text-lg font-semibold text-gray-900 mb-2">Ticket bulunamadı</h3>
        <p class="text-gray-600 mb-4">Filtrelere uygun ticket bulunamadı veya henüz hiç ticket oluşturmadınız.</p>
        <a href="@Url.Action("Create")"
           class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm font-medium">
            <i class="fas fa-plus mr-2"></i>
            Yeni Ticket Oluştur
        </a>
    </div>
}

@section Scripts {
    <script>
        let filterTimeout;

        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const statusFilter = document.getElementById('statusFilter');
            const showClosedTickets = document.getElementById('showClosedTickets');
            const pageSizeFilter = document.getElementById('pageSizeFilter');

            // Real-time search with debouncing
            searchInput.addEventListener('input', function() {
                clearTimeout(filterTimeout);
                filterTimeout = setTimeout(() => {
                    applyFilters();
                }, 300);
            });

            // Immediate filter on select change
            statusFilter.addEventListener('change', applyFilters);
            showClosedTickets.addEventListener('change', applyFilters);
            pageSizeFilter.addEventListener('change', applyFilters);
        });

        function applyFilters() {
            const searchTerm = document.getElementById('searchInput').value;
            const status = document.getElementById('statusFilter').value;
            const showClosed = document.getElementById('showClosedTickets').checked;
            const pageSize = document.getElementById('pageSizeFilter').value;

            const params = new URLSearchParams();
            if (searchTerm) params.append('SearchTerm', searchTerm);
            if (status) params.append('Status', status);
            if (showClosed) params.append('ShowClosed', 'true');
            if (pageSize) params.append('PageSize', pageSize);
            params.append('Page', '1'); // Reset to first page

            window.location.href = '?' + params.toString();
        }

        function changePage(page) {
            const params = new URLSearchParams(window.location.search);
            params.set('Page', page);
            window.location.href = '?' + params.toString();
        }
    </script>
}