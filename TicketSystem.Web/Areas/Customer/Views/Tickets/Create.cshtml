@model TicketSystem.Web.Areas.Customer.Models.CreateTicketStep1ViewModel
@{
    ViewData["Title"] = "Yeni Ticket Oluştur - Tür Seçimi";
}

@if (TempData["Error"] != null)
{
    <div class="bg-red-50 border-l-4 border-red-400 p-4 mb-6">
        <div class="text-red-700">@TempData["Error"]</div>
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="bg-green-50 border-l-4 border-green-400 p-4 mb-6">
        <div class="text-green-700">@TempData["Success"]</div>
    </div>
}

<!-- Progress Bar -->
<div class="mb-8">
    <div class="flex items-center">
        <div class="flex items-center text-blue-600">
            <span class="flex items-center justify-center w-8 h-8 border-2 border-blue-600 rounded-full bg-blue-600 text-white text-sm font-medium">1</span>
            <span class="ml-2 text-sm font-medium">Tür Seçimi</span>
        </div>
        <div class="flex-1 h-1 mx-4 bg-gray-200"></div>
        <div class="flex items-center text-gray-400">
            <span class="flex items-center justify-center w-8 h-8 border-2 border-gray-300 rounded-full text-sm font-medium">2</span>
            <span class="ml-2 text-sm font-medium">Kategori</span>
        </div>
        <div class="flex-1 h-1 mx-4 bg-gray-200"></div>
        <div class="flex items-center text-gray-400">
            <span class="flex items-center justify-center w-8 h-8 border-2 border-gray-300 rounded-full text-sm font-medium">3</span>
            <span class="ml-2 text-sm font-medium">Form</span>
        </div>
        <div class="flex-1 h-1 mx-4 bg-gray-200"></div>
        <div class="flex items-center text-gray-400">
            <span class="flex items-center justify-center w-8 h-8 border-2 border-gray-300 rounded-full text-sm font-medium">4</span>
            <span class="ml-2 text-sm font-medium">Önizleme</span>
        </div>
    </div>
</div>

<div class="bg-white rounded-lg shadow">
    <div class="px-6 py-4 border-b border-gray-200">
        <h2 class="text-xl font-semibold text-gray-900 flex items-center">
            <i class="fas fa-layer-group text-blue-600 mr-3"></i>
            Ticket Türü Seçin
        </h2>
        <p class="text-gray-600 mt-1">Oluşturmak istediğiniz ticket türünü seçiniz.</p>
    </div>

    <div class="p-6">
        @if (Model.TicketTypes.Any())
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                @foreach (var type in Model.TicketTypes.Where(t => t.IsActive).OrderBy(t => t.SortOrder))
                {
                    var emoji = type.Icon switch
                    {
                        "bug" => "🐛",
                        "lightbulb" => "💡",
                        "graduation-cap" => "🎓",
                        "cog" => "⚙️",
                        "question-circle" => "❓",
                        "exclamation-triangle" => "⚠️",
                        "tools" => "🔧",
                        "chart-line" => "📈",
                        "headset" => "🎧",
                        "rocket" => "🚀",
                        _ => "🎫"
                    };

                    <form method="post" action="/Customer/Tickets/SelectType">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="typeId" value="@type.Id" />
                        <button type="submit"
                                class="w-full p-6 border-2 border-gray-200 rounded-xl hover:border-blue-500 hover:bg-blue-50 hover:shadow-md transition-all duration-200 text-left group">
                            <!-- Header -->
                            <div class="flex items-center mb-4">
                                <div class="w-14 h-14 rounded-xl flex items-center justify-center mr-4 group-hover:scale-105 transition-transform duration-200"
                                     style="background-color: @(type.Color)15;">
                                    <span class="text-3xl">@emoji</span>
                                </div>
                                <div class="flex-1">
                                    <h3 class="text-lg font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                                        @type.Name
                                    </h3>
                                    <div class="flex items-center mt-1">
                                        <span class="inline-flex px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">
                                            Aktif
                                        </span>
                                        @if (type.SortOrder > 0)
                                        {
                                            <span class="ml-2 text-xs text-gray-500">#@type.SortOrder</span>
                                        }
                                    </div>
                                </div>
                            </div>

                            <!-- Description -->
                            @if (!string.IsNullOrEmpty(type.Description))
                            {
                                <p class="text-gray-600 text-sm leading-relaxed mb-3">@type.Description</p>
                            }

                            <!-- Form Fields Info -->
                            @{
                                var hasFormFields = !string.IsNullOrEmpty(type.FormDefinition);
                                var fieldCount = 0;

                                if (hasFormFields)
                                {
                                    try
                                    {
                                        var formDef = System.Text.Json.JsonSerializer.Deserialize<System.Text.Json.JsonElement>(type.FormDefinition);
                                        if (formDef.TryGetProperty("fields", out var fieldsElement) && fieldsElement.ValueKind == System.Text.Json.JsonValueKind.Array)
                                        {
                                            fieldCount = fieldsElement.GetArrayLength();
                                        }
                                    }
                                    catch { }
                                }
                            }

                            <div class="flex items-center justify-between pt-3 border-t border-gray-100">
                                <div class="flex items-center text-sm text-gray-500">
                                    <i class="fas fa-list-alt mr-2"></i>
                                    @if (fieldCount > 0)
                                    {
                                        <span>@fieldCount özel alan</span>
                                    }
                                    else
                                    {
                                        <span>Standart form</span>
                                    }
                                </div>
                                <div class="text-blue-600 opacity-0 group-hover:opacity-100 transition-opacity">
                                    <i class="fas fa-arrow-right"></i>
                                </div>
                            </div>
                        </button>
                    </form>
                }
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <div class="w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
                    <i class="fas fa-layer-group text-gray-400 text-3xl"></i>
                </div>
                <h3 class="text-xl font-medium text-gray-900 mb-2">Henüz ticket türü bulunamadı</h3>
                <p class="text-gray-500 mb-6">Sistem yöneticisi henüz aktif ticket türü tanımlamamış.</p>
                <a href="@Url.Action("Index")"
                   class="inline-flex items-center px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors">
                    <i class="fas fa-arrow-left mr-2"></i>Geri Dön
                </a>
            </div>
        }
    </div>
</div>

@if (Model.TicketTypes.Any())
{
    <!-- Info Box -->
    <div class="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
        <div class="flex">
            <i class="fas fa-info-circle text-blue-600 mt-1 mr-3"></i>
            <div>
                <h4 class="text-sm font-medium text-blue-800">Ticket Oluşturma Süreci</h4>
                <p class="text-sm text-blue-700 mt-1">
                    1. Ticket türünü seçin → 2. Kategoriyi belirleyin → 3. Formu doldurun → 4. Önizleyip onaylayın
                </p>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Form submission loading states
            const forms = document.querySelectorAll('form');
            forms.forEach(function(form) {
                form.addEventListener('submit', function() {
                    const button = form.querySelector('button[type="submit"]');
                    if (button) {
                        button.disabled = true;
                        const originalContent = button.innerHTML;
                        button.innerHTML = '<div class="flex items-center justify-center"><i class="fas fa-spinner fa-spin mr-2"></i>Yükleniyor...</div>';

                        // Reset after 10 seconds if no navigation happens
                        setTimeout(() => {
                            button.disabled = false;
                            button.innerHTML = originalContent;
                        }, 10000);
                    }
                });
            });

            // Keyboard navigation
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    window.location.href = '@Url.Action("Index")';
                }
            });
        });
    </script>
}