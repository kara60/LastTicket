@model TicketSystem.Web.Areas.Customer.Models.CreateTicketStep1ViewModel
@{
    ViewData["Title"] = "Yeni Ticket Oluştur";
}

<!-- Alert Messages -->
@if (TempData["Error"] != null)
{
    <div class="mb-6 bg-red-50 border border-red-200 rounded-xl p-4 flex items-start">
        <div class="flex-shrink-0">
            <i class="fas fa-exclamation-triangle text-red-500"></i>
        </div>
        <div class="ml-3">
            <p class="text-sm font-medium text-red-800">@TempData["Error"]</p>
        </div>
        <button type="button" onclick="this.parentElement.style.display='none'" class="ml-auto text-red-400 hover:text-red-600">
            <i class="fas fa-times"></i>
        </button>
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="mb-6 bg-green-50 border border-green-200 rounded-xl p-4 flex items-start">
        <div class="flex-shrink-0">
            <i class="fas fa-check-circle text-green-500"></i>
        </div>
        <div class="ml-3">
            <p class="text-sm font-medium text-green-800">@TempData["Success"]</p>
        </div>
        <button type="button" onclick="this.parentElement.style.display='none'" class="ml-auto text-green-400 hover:text-green-600">
            <i class="fas fa-times"></i>
        </button>
    </div>
}

<!-- Modern Progress Steps -->
<div class="mb-8">
    <div class="flex items-center justify-center">
        <div class="flex items-center space-x-8">
            <!-- Step 1: Active -->
            <div class="flex items-center">
                <div class="flex items-center justify-center w-10 h-10 rounded-full bg-gradient-to-r from-blue-500 to-indigo-600 text-white shadow-lg">
                    <span class="text-sm font-bold">1</span>
                </div>
                <span class="ml-3 text-sm font-semibold text-blue-600">Tür Seçimi</span>
            </div>

            <!-- Connector -->
            <div class="h-0.5 w-16 bg-gray-200"></div>

            <!-- Step 2: Inactive -->
            <div class="flex items-center opacity-50">
                <div class="flex items-center justify-center w-10 h-10 rounded-full border-2 border-gray-200 bg-white text-gray-400">
                    <span class="text-sm font-medium">2</span>
                </div>
                <span class="ml-3 text-sm font-medium text-gray-400">Kategori</span>
            </div>

            <!-- Connector -->
            <div class="h-0.5 w-16 bg-gray-200"></div>

            <!-- Step 3: Inactive -->
            <div class="flex items-center opacity-50">
                <div class="flex items-center justify-center w-10 h-10 rounded-full border-2 border-gray-200 bg-white text-gray-400">
                    <span class="text-sm font-medium">3</span>
                </div>
                <span class="ml-3 text-sm font-medium text-gray-400">Form</span>
            </div>

            <!-- Connector -->
            <div class="h-0.5 w-16 bg-gray-200"></div>

            <!-- Step 4: Inactive -->
            <div class="flex items-center opacity-50">
                <div class="flex items-center justify-center w-10 h-10 rounded-full border-2 border-gray-200 bg-white text-gray-400">
                    <span class="text-sm font-medium">4</span>
                </div>
                <span class="ml-3 text-sm font-medium text-gray-400">Önizleme</span>
            </div>
        </div>
    </div>
</div>

<!-- Main Container -->
<div class="max-w-7xl mx-auto">
    <!-- Header -->
    <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">Yeni Destek Talebi</h1>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">
            Size en iyi hizmeti verebilmek için talebinizin türünü seçiniz.
        </p>
    </div>

    @if (Model.TicketTypes.Any())
    {
        <!-- Ticket Types Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
            @foreach (var type in Model.TicketTypes.Where(t => t.IsActive).OrderBy(t => t.SortOrder))
            {
                var emoji = type.Icon switch
                {
                    "bug" => "🐛",
                    "lightbulb" => "💡",
                    "graduation-cap" => "🎓",
                    "cog" => "⚙️",
                    "question-circle" => "❓",
                    "exclamation-triangle" => "⚠️",
                    "tools" => "🔧",
                    "chart-line" => "📈",
                    "headset" => "🎧",
                    "rocket" => "🚀",
                    _ => "🎫"
                };

                <form method="post" action="/Customer/Tickets/SelectType" class="h-full">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="typeId" value="@type.Id" />

                    <button type="submit" class="ticket-type-card group h-full w-full">
                        <!-- Card Content -->
                        <div class="relative bg-white rounded-2xl border border-gray-100 shadow-sm hover:shadow-xl transition-all duration-300 h-full p-6 group-hover:border-blue-200">

                            <!-- Animated Background -->
                            <div class="absolute inset-0 bg-gradient-to-r opacity-0 group-hover:opacity-5 transition-opacity duration-300 rounded-2xl"
                                 style="background: linear-gradient(135deg, @type.Color 0%, darken(@type.Color, 20%) 100%);">
                            </div>

                            <!-- Header -->
                            <div class="relative flex items-center mb-4">
                                <div class="w-16 h-16 rounded-2xl flex items-center justify-center mr-4 group-hover:scale-110 transition-transform duration-300 shadow-lg"
                                     style="background: linear-gradient(135deg, @(type.Color)20, @(type.Color)10);">
                                    <span class="text-3xl">@emoji</span>
                                </div>
                                <div class="flex-1 text-left">
                                    <h3 class="text-xl font-bold text-gray-900 group-hover:text-blue-600 transition-colors mb-1">
                                        @type.Name
                                    </h3>
                                    <div class="flex items-center">
                                        <span class="inline-flex items-center px-2.5 py-0.5 text-xs font-semibold bg-green-100 text-green-800 rounded-full">
                                            <i class="fas fa-check mr-1 text-xs"></i>Aktif
                                        </span>
                                        @if (type.SortOrder > 0)
                                        {
                                            <span class="ml-2 text-xs text-gray-400">#@type.SortOrder</span>
                                        }
                                    </div>
                                </div>
                            </div>

                            <!-- Description -->
                            @if (!string.IsNullOrEmpty(type.Description))
                            {
                                <p class="text-gray-600 text-sm leading-relaxed mb-4 line-clamp-3">@type.Description</p>
                            }

                            <!-- Form Fields Info -->
                            @{
                                var hasFormFields = !string.IsNullOrEmpty(type.FormDefinition);
                                var fieldCount = 0;

                                if (hasFormFields)
                                {
                                    try
                                    {
                                        var formDef = System.Text.Json.JsonSerializer.Deserialize<System.Text.Json.JsonElement>(type.FormDefinition);
                                        if (formDef.TryGetProperty("fields", out var fieldsElement) && fieldsElement.ValueKind == System.Text.Json.JsonValueKind.Array)
                                        {
                                            fieldCount = fieldsElement.GetArrayLength();
                                        }
                                    }
                                    catch { }
                                }
                            }

                            <!-- Footer -->
                            <div class="flex items-center justify-between pt-4 border-t border-gray-100">
                                <div class="flex items-center text-sm text-gray-500">
                                    <i class="fas fa-list-alt mr-2"></i>
                                    @if (fieldCount > 0)
                                    {
                                        <span>@fieldCount özel alan</span>
                                    }
                                    else
                                    {
                                        <span>Standart form</span>
                                    }
                                </div>
                                <div class="text-blue-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                    <i class="fas fa-arrow-right"></i>
                                </div>
                            </div>
                        </div>
                    </button>
                </form>
            }
        </div>

        <!-- Help Section -->
        <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl border border-blue-100 p-6">
            <div class="flex items-start">
                <div class="flex-shrink-0">
                    <div class="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center">
                        <i class="fas fa-info text-white"></i>
                    </div>
                </div>
                <div class="ml-4">
                    <h4 class="text-lg font-semibold text-blue-900 mb-2">Ticket Oluşturma Süreci</h4>
                    <div class="flex flex-wrap items-center gap-2 text-sm text-blue-700">
                        <span class="flex items-center bg-white px-3 py-1 rounded-full">
                            <span class="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
                            Ticket türünü seçin
                        </span>
                        <i class="fas fa-arrow-right text-blue-400"></i>
                        <span class="flex items-center bg-white px-3 py-1 rounded-full">
                            <span class="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
                            Kategoriyi belirleyin
                        </span>
                        <i class="fas fa-arrow-right text-blue-400"></i>
                        <span class="flex items-center bg-white px-3 py-1 rounded-full">
                            <span class="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
                            Formu doldurun
                        </span>
                        <i class="fas fa-arrow-right text-blue-400"></i>
                        <span class="flex items-center bg-white px-3 py-1 rounded-full">
                            <span class="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
                            Önizleyip onaylayın
                        </span>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="text-center py-16">
            <div class="w-32 h-32 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
                <i class="fas fa-layer-group text-gray-400 text-4xl"></i>
            </div>
            <h3 class="text-2xl font-semibold text-gray-900 mb-3">Henüz Ticket Türü Bulunmuyor</h3>
            <p class="text-gray-600 mb-6 max-w-md mx-auto">
                Sistem yöneticisi henüz aktif ticket türü tanımlamamış.
                Lütfen sistem yöneticisi ile iletişime geçin.
            </p>
            <a href="@Url.Action("Index")"
               class="inline-flex items-center px-6 py-3 bg-gray-600 text-white rounded-xl hover:bg-gray-700 transition-colors shadow-lg hover:shadow-xl">
                <i class="fas fa-arrow-left mr-2"></i>
                Ana Sayfaya Dön
            </a>
        </div>
    }
</div>

<style>
    .ticket-type-card {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .ticket-type-card:hover {
        transform: translateY(-4px);
    }

    .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Enhanced form submission with loading states
            const forms = document.querySelectorAll('form');
            forms.forEach(function(form) {
                form.addEventListener('submit', function(e) {
                    const button = form.querySelector('button[type="submit"]');
                    if (button && !button.disabled) {
                        button.disabled = true;

                        // Add loading indicator
                        const originalContent = button.innerHTML;
                        button.innerHTML = '<div class="flex items-center justify-center"><div class="animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent mr-2"></div>Yükleniyor...</div>';

                        // Timeout protection
                        setTimeout(() => {
                            if (button.disabled) {
                                button.disabled = false;
                                button.innerHTML = originalContent;
                            }
                        }, 10000);
                    }
                });
            });

            // Keyboard shortcuts
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    window.location.href = '@Url.Action("Index")';
                }

                // Number keys for quick selection
                if (e.key >= '1' && e.key <= '9') {
                    const index = parseInt(e.key) - 1;
                    const forms = document.querySelectorAll('form');
                    if (forms[index]) {
                        forms[index].querySelector('button[type="submit"]').click();
                    }
                }
            });

            // Add subtle animations
            const cards = document.querySelectorAll('.ticket-type-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
                card.classList.add('animate-fade-in-up');
            });
        });
    </script>

    <style>
        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animate-fade-in-up {
            animation: fadeInUp 0.6s ease-out forwards;
        }
    </style>
}