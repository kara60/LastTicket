@model TicketSystem.Web.Areas.Customer.Models.CreateTicketStep4ViewModel
@{
    ViewData["Title"] = "Yeni Ticket Oluştur - Önizleme";
}

<!-- Debug bilgilerini görmek için -->
<div style="background: #f0f0f0; padding: 10px; margin: 10px 0;">
    <h4>DEBUG:</h4>
    <p>TypeId: @Model.SelectedTypeId</p>
    <p>CategoryId: @Model.SelectedCategoryId</p>
    <p>Title: @Model.Title</p>
    <p>Type Name: @(Model.SelectedType?.Name ?? "NULL")</p>
    <p>Category Name: @(Model.SelectedCategory?.Name ?? "NULL")</p>
    <p>FormData Count: @(Model.FormData?.Count ?? 0)</p>
</div>

<!-- Progress Bar -->
<div class="mb-8">
    <div class="flex items-center">
        <div class="flex items-center text-green-600">
            <span class="flex items-center justify-center w-8 h-8 border-2 border-green-600 rounded-full bg-green-600 text-white text-sm font-medium">
                <i class="fas fa-check text-xs"></i>
            </span>
            <span class="ml-2 text-sm font-medium">Tür Seçimi</span>
        </div>
        <div class="flex-1 h-1 mx-4 bg-green-600"></div>
        <div class="flex items-center text-green-600">
            <span class="flex items-center justify-center w-8 h-8 border-2 border-green-600 rounded-full bg-green-600 text-white text-sm font-medium">
                <i class="fas fa-check text-xs"></i>
            </span>
            <span class="ml-2 text-sm font-medium">Kategori</span>
        </div>
        <div class="flex-1 h-1 mx-4 bg-green-600"></div>
        <div class="flex items-center text-green-600">
            <span class="flex items-center justify-center w-8 h-8 border-2 border-green-600 rounded-full bg-green-600 text-white text-sm font-medium">
                <i class="fas fa-check text-xs"></i>
            </span>
            <span class="ml-2 text-sm font-medium">Form</span>
        </div>
        <div class="flex-1 h-1 mx-4 bg-green-600"></div>
        <div class="flex items-center text-blue-600">
            <span class="flex items-center justify-center w-8 h-8 border-2 border-blue-600 rounded-full bg-blue-600 text-white text-sm font-medium">4</span>
            <span class="ml-2 text-sm font-medium">Önizleme</span>
        </div>
    </div>
</div>

<div class="bg-white rounded-lg shadow">
    <div class="px-6 py-4 border-b border-gray-200">
        <h2 class="text-xl font-semibold text-gray-900 flex items-center">
            <i class="fas fa-eye text-blue-600 mr-3"></i>
            Ticket Önizleme
        </h2>
        <p class="text-gray-600 mt-1">Ticket bilgilerinizi kontrol edin ve onaylayın.</p>
    </div>

    <div class="p-6">
        <!-- Ticket Header -->
        <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 mb-6 border border-blue-200">
            <div class="flex items-center justify-between mb-4">
                <div>
                    <h1 class="text-2xl font-bold text-gray-900">@Model.Title</h1>
                    <p class="text-sm text-gray-600 mt-1">
                        <i class="fas fa-clock mr-1"></i>
                        @DateTime.Now.ToString("dd.MM.yyyy HH:mm") tarihinde oluşturulacak
                    </p>
                </div>
                <div class="text-right">
                    <span class="inline-flex px-3 py-1 text-sm font-semibold rounded-full bg-yellow-100 text-yellow-800">
                        <i class="fas fa-hourglass-half mr-1"></i>İnceleniyor
                    </span>
                    <p class="text-xs text-gray-500 mt-1">Başlangıç durumu</p>
                </div>
            </div>
        </div>

        <!-- Main Content Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Left Column - Main Info -->
            <div class="lg:col-span-2 space-y-6">
                <!-- Description -->
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="bg-gray-50 rounded-lg p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-3 flex items-center">
                            <i class="fas fa-align-left mr-2 text-gray-600"></i>
                            Açıklama
                        </h3>
                        <p class="text-gray-900 whitespace-pre-wrap leading-relaxed">@Model.Description</p>
                    </div>
                }

                <!-- Dynamic Form Data -->
                @if (Model.FormData.Any())
                {
                    <div class="bg-white border border-gray-200 rounded-lg">
                        <div class="px-6 py-4 border-b border-gray-200 bg-gray-50 rounded-t-lg">
                            <h3 class="text-lg font-medium text-gray-900 flex items-center">
                                @{
                                    var typeEmoji = Model.SelectedType?.Icon switch
                                    {
                                        "bug" => "🐛",
                                        "lightbulb" => "💡",
                                        "graduation-cap" => "🎓",
                                        "cog" => "⚙️",
                                        "question-circle" => "❓",
                                        "exclamation-triangle" => "⚠️",
                                        "tools" => "🔧",
                                        "chart-line" => "📈",
                                        "headset" => "🎧",
                                        "rocket" => "🚀",
                                        _ => "📋"
                                    };
                                }
                                <span class="text-xl mr-2">@typeEmoji</span>
                                @Model.SelectedType?.Name Detayları
                            </h3>
                        </div>
                        <div class="p-6">
                            <dl class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                @foreach (var field in Model.FormData)
                                {
                                    <div>
                                        <dt class="text-sm font-medium text-gray-600 mb-1">@field.Key</dt>
                                        <dd class="text-sm text-gray-900 font-medium">
                                            @if (field.Value?.ToString()?.ToLower() == "true")
                                            {
                                                <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">
                                                    <i class="fas fa-check mr-1"></i>Evet
                                                </span>
                                            }
                                            else if (field.Value?.ToString()?.ToLower() == "false")
                                            {
                                                <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full">
                                                    <i class="fas fa-times mr-1"></i>Hayır
                                                </span>
                                            }
                                            else
                                            {
                                                @field.Value
                                            }
                                        </dd>
                                    </div>
                                }
                            </dl>
                        </div>
                    </div>
                }
            </div>

            <!-- Right Column - Sidebar Info -->
            <div class="space-y-6">
                <!-- Ticket Classification -->
                <div class="bg-white border border-gray-200 rounded-lg">
                    <div class="px-6 py-4 border-b border-gray-200 bg-gray-50 rounded-t-lg">
                        <h3 class="text-lg font-medium text-gray-900 flex items-center">
                            <i class="fas fa-tags mr-2 text-gray-600"></i>
                            Sınıflandırma
                        </h3>
                    </div>
                    <div class="p-6 space-y-4">
                        <div>
                            <dt class="text-sm font-medium text-gray-600">Ticket Türü</dt>
                            <dd class="text-sm text-gray-900 mt-1 flex items-center">
                                <div class="w-4 h-4 rounded-full mr-2" style="background-color: @Model.SelectedType?.Color"></div>
                                @Model.SelectedType?.Name
                            </dd>
                        </div>

                        <div>
                            <dt class="text-sm font-medium text-gray-600">Kategori</dt>
                            <dd class="text-sm text-gray-900 mt-1 flex items-center">
                                @{
                                    var categoryEmoji = Model.SelectedCategory?.Icon switch
                                    {
                                        "bug" => "🐛",
                                        "lightbulb" => "💡",
                                        "graduation-cap" => "🎓",
                                        "cog" => "⚙️",
                                        "question-circle" => "❓",
                                        "exclamation-triangle" => "⚠️",
                                        "tools" => "🔧",
                                        "chart-line" => "📈",
                                        "headset" => "🎧",
                                        "rocket" => "🚀",
                                        _ => "📁"
                                    };
                                }
                                <div class="w-4 h-4 rounded-full mr-2" style="background-color: @Model.SelectedCategory?.Color"></div>
                                @Model.SelectedCategory?.Name
                            </dd>
                        </div>

                        @if (!string.IsNullOrEmpty(Model.SelectedModule))
                        {
                            <div>
                                <dt class="text-sm font-medium text-gray-600">Seçilen Modül</dt>
                                <dd class="text-sm text-gray-900 mt-1">
                                    <span class="inline-flex px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded">
                                        <i class="fas fa-puzzle-piece mr-1"></i>
                                        @Model.SelectedModule
                                    </span>
                                </dd>
                            </div>
                        }
                    </div>
                </div>

                <!-- Process Info -->
                <div class="bg-blue-50 border border-blue-200 rounded-lg p-6">
                    <div class="flex">
                        <i class="fas fa-info-circle text-blue-600 mt-1 mr-3"></i>
                        <div>
                            <h4 class="text-sm font-medium text-blue-800">Sonraki Adımlar</h4>
                            <ul class="text-sm text-blue-700 mt-2 space-y-1">
                                <li>• Ticket otomatik olarak sistem yöneticilerine bildirilecek</li>
                                <li>• E-posta ile ticket numaranız gönderilecek</li>
                                <li>• İnceleme süreci başlatılacak</li>
                                <li>• Güncellemeler hakkında bilgilendirileceksiniz</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Estimated Timeline -->
                <div class="bg-green-50 border border-green-200 rounded-lg p-6">
                    <div class="flex">
                        <i class="fas fa-clock text-green-600 mt-1 mr-3"></i>
                        <div>
                            <h4 class="text-sm font-medium text-green-800">Tahmini Süreç</h4>
                            <div class="text-sm text-green-700 mt-2">
                                <div class="flex items-center space-x-2 mb-1">
                                    <div class="w-2 h-2 bg-yellow-400 rounded-full"></div>
                                    <span>İnceleme: 1-2 gün</span>
                                </div>
                                <div class="flex items-center space-x-2 mb-1">
                                    <div class="w-2 h-2 bg-blue-400 rounded-full"></div>
                                    <span>İşleme alma: 2-5 gün</span>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <div class="w-2 h-2 bg-green-400 rounded-full"></div>
                                    <span>Çözüm: Türe bağlı</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="px-6 py-4 border-t border-gray-200 bg-gray-50 rounded-b-lg">
        <div class="flex justify-between items-center">
            <a href="javascript:history.back()"
               class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors">
                <i class="fas fa-arrow-left mr-2"></i>Geri
            </a>
            <div style="background: #ffcccc; padding: 10px; margin: 10px 0;">
                <h4>RAW VALUES FROM CONTROLLER:</h4>
                <p>Model.SelectedTypeId: @Model.SelectedTypeId</p>
                <p>Model.SelectedCategoryId: @Model.SelectedCategoryId</p>
            </div>
            <form method="post" action="/Customer/Tickets/SubmitTicket" class="inline" id="submitForm">
                @Html.AntiForgeryToken()

                <!-- Debug için value'ları görelim -->
                <input type="hidden" name="SelectedTypeId" value="@Model.SelectedTypeId" />
                <input type="hidden" name="SelectedCategoryId" value="@Model.SelectedCategoryId" />

                <!-- Debug için visible yapıp görelim -->
                <div style="background: #ccffcc; padding: 10px;">
                    <p>Hidden SelectedTypeId value: @Model.SelectedTypeId</p>
                    <p>Hidden SelectedCategoryId value: @Model.SelectedCategoryId</p>
                </div>

                <input type="hidden" name="Title" value="@Model.Title" />
                <input type="hidden" name="Description" value="@Model.Description" />
                <input type="hidden" name="SelectedModule" value="@Model.SelectedModule" />

                @if (Model.FormData != null)
                {
                    @foreach (var field in Model.FormData)
                    {
                        <input type="hidden" name="FormData[@field.Key]" value="@field.Value" />
                    }
                }

                <button type="submit" id="submitBtn">Ticket'ı Oluştur</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const submitForm = document.getElementById('submitForm');

            if (submitForm) {
                submitForm.addEventListener('submit', function(e) {
                    const submitBtn = document.getElementById('submitBtn');

                    if (submitBtn && !submitBtn.disabled) {
                        submitBtn.disabled = true;
                        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Oluşturuluyor...';

                        // Show loading overlay
                        showLoadingOverlay();
                    }
                });
            }

            // Keyboard shortcuts
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    history.back();
                } else if (e.key === 'Enter' && e.ctrlKey) {
                    document.getElementById('submitBtn').click();
                }
            });
        });

        function showLoadingOverlay() {
            const overlay = document.createElement('div');
            overlay.id = 'loadingOverlay';
            overlay.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50';
            overlay.innerHTML = `
                <div class="bg-white rounded-lg p-6 max-w-sm mx-4">
                    <div class="text-center">
                        <i class="fas fa-cog fa-spin text-4xl text-blue-600 mb-4"></i>
                        <h3 class="text-lg font-medium text-gray-900 mb-2">Ticket Oluşturuluyor</h3>
                        <p class="text-sm text-gray-600">Lütfen bekleyin, ticket'ınız kaydediliyor...</p>
                    </div>
                </div>
            `;
            document.body.appendChild(overlay);

            // Remove overlay after 30 seconds as failsafe
            setTimeout(() => {
                const overlayElement = document.getElementById('loadingOverlay');
                if (overlayElement) {
                    overlayElement.remove();
                }
            }, 30000);
        }
    </script>
}