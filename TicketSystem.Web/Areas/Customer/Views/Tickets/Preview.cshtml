@model TicketSystem.Web.Areas.Customer.Models.CreateTicketStep4ViewModel
@{
    ViewData["Title"] = "Ticket Önizleme";
}

<!-- Modern Progress Steps -->
<div class="mb-6">
    <div class="flex items-center justify-center">
        <div class="flex items-center space-x-8">
            <!-- All steps completed -->
            <div class="flex items-center">
                <div class="flex items-center justify-center w-10 h-10 rounded-full bg-green-500 text-white shadow-lg">
                    <i class="fas fa-check text-sm"></i>
                </div>
                <span class="ml-3 text-sm font-semibold text-green-600">Tür Seçimi</span>
            </div>

            <div class="h-0.5 w-16 bg-green-500"></div>

            <div class="flex items-center">
                <div class="flex items-center justify-center w-10 h-10 rounded-full bg-green-500 text-white shadow-lg">
                    <i class="fas fa-check text-sm"></i>
                </div>
                <span class="ml-3 text-sm font-semibold text-green-600">Kategori</span>
            </div>

            <div class="h-0.5 w-16 bg-green-500"></div>

            <div class="flex items-center">
                <div class="flex items-center justify-center w-10 h-10 rounded-full bg-green-500 text-white shadow-lg">
                    <i class="fas fa-check text-sm"></i>
                </div>
                <span class="ml-3 text-sm font-semibold text-green-600">Form</span>
            </div>

            <div class="h-0.5 w-16 bg-green-500"></div>

            <!-- Step 4: Active -->
            <div class="flex items-center">
                <div class="flex items-center justify-center w-10 h-10 rounded-full bg-gradient-to-r from-purple-500 to-pink-600 text-white shadow-lg">
                    <span class="text-sm font-bold">4</span>
                </div>
                <span class="ml-3 text-sm font-semibold text-purple-600">Önizleme</span>
            </div>
        </div>
    </div>
</div>

<!-- Header -->
<div class="text-center mb-6">
    <h1 class="text-2xl font-bold text-gray-900 mb-2">Ticket Önizleme</h1>
    <p class="text-gray-600 max-w-2xl mx-auto text-sm">
        Ticket bilgilerinizi kontrol edin ve onayladıktan sonra destek talebiniz oluşturulacaktır
    </p>
</div>

<!-- Preview Container -->
<div class="max-w-5xl mx-auto">
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">

        <!-- Ticket Header -->
        <div class="bg-gradient-to-r from-blue-500 to-indigo-600 text-white p-6">
            <div class="flex items-center justify-between">
                <div class="flex-1">
                    <h1 class="text-xl font-bold mb-2">@(Model.Title ?? "Ticket")</h1>
                    <div class="flex items-center text-blue-100 text-sm">
                        <i class="fas fa-calendar-alt mr-2"></i>
                        <span>@DateTime.Now.ToString("dd.MM.yyyy HH:mm") tarihinde oluşturulacak</span>
                    </div>
                </div>
                <div class="text-center">
                    <div class="inline-flex items-center px-4 py-2 bg-white bg-opacity-20 rounded-lg">
                        <div class="w-3 h-3 bg-yellow-400 rounded-full mr-2"></div>
                        <span class="font-semibold text-sm">İnceleniyor</span>
                    </div>
                    <p class="text-xs text-blue-200 mt-1">Başlangıç durumu</p>
                </div>
            </div>
        </div>

        <!-- Content Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 p-6">

            <!-- Main Content -->
            <div class="lg:col-span-2 space-y-6">

                <!-- Description -->
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="bg-gray-50 rounded-lg p-4">
                        <h3 class="text-lg font-semibold text-gray-900 mb-3 flex items-center">
                            <i class="fas fa-align-left mr-2 text-gray-600"></i>
                            Açıklama
                        </h3>
                        <p class="text-gray-800 leading-relaxed whitespace-pre-wrap text-sm">@Model.Description</p>
                    </div>
                }

                <!-- Dynamic Form Data -->
                @if (Model.FormData != null && Model.FormData.Any())
                {
                    <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                        <div class="px-4 py-3 border-b border-gray-200 bg-gray-50">
                            <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                                @{
                                    var typeEmoji = Model.SelectedType?.Icon switch
                                    {
                                        "bug" => "🐛",
                                        "lightbulb" => "💡",
                                        "graduation-cap" => "🎓",
                                        "cog" => "⚙️",
                                        "question-circle" => "❓",
                                        "exclamation-triangle" => "⚠️",
                                        "tools" => "🔧",
                                        "chart-line" => "📈",
                                        "headset" => "🎧",
                                        "rocket" => "🚀",
                                        _ => "📋"
                                    };
                                }
                                <span class="text-xl mr-2">@typeEmoji</span>
                                @(Model.SelectedType?.Name ?? "Ticket") Detayları
                            </h3>
                        </div>
                        <div class="p-4">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                @foreach (var field in Model.FormData)
                                {
                                    <div class="bg-gray-50 rounded-lg p-3">
                                        <dt class="text-sm font-semibold text-gray-600 mb-1">@field.Key</dt>
                                        <dd class="text-gray-900">
                                            @if (field.Value?.ToString()?.ToLower() == "true")
                                            {
                                                <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">
                                                    <i class="fas fa-check mr-1"></i>Evet
                                                </span>
                                            }
                                            else if (field.Value?.ToString()?.ToLower() == "false")
                                            {
                                                <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full">
                                                    <i class="fas fa-times mr-1"></i>Hayır
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-sm font-medium">@field.Value</span>
                                            }
                                        </dd>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Sidebar -->
            <div class="space-y-4">

                <!-- Ticket Classification -->
                <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                    <div class="px-4 py-3 border-b border-gray-200 bg-gray-50">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-tags mr-2 text-gray-600"></i>
                            Sınıflandırma
                        </h3>
                    </div>
                    <div class="p-4 space-y-3">
                        <div>
                            <dt class="text-sm font-medium text-gray-600 mb-2">Ticket Türü</dt>
                            <dd class="flex items-center">
                                <div class="w-4 h-4 rounded-full mr-3" style="background-color: @(Model.SelectedType?.Color ?? "#3B82F6")"></div>
                                <span class="text-sm font-semibold text-gray-900">@(Model.SelectedType?.Name ?? "Belirtilmemiş")</span>
                            </dd>
                        </div>

                        <div>
                            <dt class="text-sm font-medium text-gray-600 mb-2">Kategori</dt>
                            <dd class="flex items-center">
                                <div class="w-4 h-4 rounded-full mr-3" style="background-color: @(Model.SelectedCategory?.Color ?? "#6B7280")"></div>
                                <span class="text-sm font-semibold text-gray-900">@(Model.SelectedCategory?.Name ?? "Belirtilmemiş")</span>
                            </dd>
                        </div>

                        @if (!string.IsNullOrEmpty(Model.SelectedModule))
                        {
                            <div>
                                <dt class="text-sm font-medium text-gray-600 mb-2">Seçilen Modül</dt>
                                <dd>
                                    <span class="inline-flex items-center px-3 py-1 text-sm font-medium bg-blue-100 text-blue-800 rounded-full">
                                        <i class="fas fa-puzzle-piece mr-2"></i>
                                        @Model.SelectedModule
                                    </span>
                                </dd>
                            </div>
                        }
                    </div>
                </div>

                <!-- Process Timeline -->
                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                    <div class="flex items-start">
                        <i class="fas fa-info-circle text-blue-600 mt-1 mr-3"></i>
                        <div class="flex-1">
                            <h4 class="font-semibold text-blue-900 mb-2 text-sm">Sonraki Adımlar</h4>
                            <ul class="text-xs text-blue-800 space-y-2">
                                <li class="flex items-center">
                                    <div class="w-2 h-2 bg-blue-500 rounded-full mr-2"></div>
                                    Sistem yöneticilerine bildirim gönderilecek
                                </li>
                                <li class="flex items-center">
                                    <div class="w-2 h-2 bg-blue-500 rounded-full mr-2"></div>
                                    E-posta ile ticket numaranız gönderilecek
                                </li>
                                <li class="flex items-center">
                                    <div class="w-2 h-2 bg-blue-500 rounded-full mr-2"></div>
                                    İnceleme süreci başlatılacak
                                </li>
                                <li class="flex items-center">
                                    <div class="w-2 h-2 bg-blue-500 rounded-full mr-2"></div>
                                    Güncellemeler hakkında bilgilendirileceksiniz
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Estimated Timeline -->
                <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                    <div class="flex items-start">
                        <i class="fas fa-clock text-green-600 mt-1 mr-3"></i>
                        <div class="flex-1">
                            <h4 class="font-semibold text-green-900 mb-2 text-sm">Tahmini Süreç</h4>
                            <div class="space-y-2 text-xs">
                                <div class="flex items-center justify-between">
                                    <span class="text-green-800">İnceleme</span>
                                    <span class="font-medium text-green-900">1-2 saat</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-green-800">İşleme alma</span>
                                    <span class="font-medium text-green-900">1-2 gün</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-green-800">Çözüm</span>
                                    <span class="font-medium text-green-900">Türe bağlı</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="flex justify-between items-center mt-6">
        <a href="@Url.Action("FillForm", new { typeId = Model.SelectedTypeId, categoryId = Model.SelectedCategoryId })"
           class="inline-flex items-center px-6 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors shadow-sm hover:shadow-md text-sm">
            <i class="fas fa-arrow-left mr-2"></i>
            Geri Dön
        </a>

        <form method="post" action="/Customer/Tickets/SubmitTicket" id="submitForm" class="inline">
            @Html.AntiForgeryToken()

            <input type="hidden" name="SelectedTypeId" value="@Model.SelectedTypeId" />
            <input type="hidden" name="SelectedCategoryId" value="@Model.SelectedCategoryId" />
            <input type="hidden" name="Title" value="@Html.Raw(Html.Encode(Model.Title))" />
            <input type="hidden" name="Description" value="@Html.Raw(Html.Encode(Model.Description ?? ""))" />
            <input type="hidden" name="SelectedModule" value="@Html.Raw(Html.Encode(Model.SelectedModule ?? ""))" />

            @* JSON olarak FormData gönder *@
            @if (Model.FormData != null && Model.FormData.Any())
            {
                <input type="hidden" name="FormDataJson" value="@Html.Raw(Html.Encode(System.Text.Json.JsonSerializer.Serialize(Model.FormData)))" />
            }

            <button type="submit" id="submitBtn"
                    class="inline-flex items-center px-8 py-2 bg-gradient-to-r from-green-600 to-emerald-600 text-white rounded-lg hover:from-green-700 hover:to-emerald-700 transition-all duration-200 shadow-lg hover:shadow-xl font-semibold text-sm">
                <i class="fas fa-paper-plane mr-2"></i>
                Ticket'ı Oluştur
            </button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const submitForm = document.getElementById('submitForm');
            const submitBtn = document.getElementById('submitBtn');

            if (submitForm && submitBtn) {
                submitForm.addEventListener('submit', function(e) {
                    if (!submitBtn.disabled) {
                        // Disable button and show loading
                        submitBtn.disabled = true;
                        submitBtn.innerHTML = '<div class="flex items-center"><div class="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent mr-2"></div>Oluşturuluyor...</div>';

                        // Show loading overlay
                        showLoadingOverlay();
                    }
                });
            }

            // Keyboard shortcuts
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    window.location.href = '@Url.Action("FillForm", new { typeId = Model.SelectedTypeId, categoryId = Model.SelectedCategoryId })';
                } else if (e.key === 'Enter' && e.ctrlKey && submitBtn && !submitBtn.disabled) {
                    submitBtn.click();
                }
            });
        });

        function showLoadingOverlay() {
            const overlay = document.createElement('div');
            overlay.id = 'loadingOverlay';
            overlay.className = 'fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center z-50 backdrop-blur-sm';

            overlay.innerHTML = `
                <div class="bg-white rounded-xl p-6 max-w-sm mx-4 text-center shadow-2xl">
                    <div class="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                        <div class="animate-spin rounded-full h-6 w-6 border-2 border-blue-600 border-t-transparent"></div>
                    </div>
                    <h3 class="text-lg font-bold text-gray-900 mb-2">Ticket Oluşturuluyor</h3>
                    <p class="text-gray-600 text-sm">Lütfen bekleyin, talebiniz kaydediliyor...</p>
                </div>
            `;

            document.body.appendChild(overlay);

            // Remove overlay after 30 seconds as failsafe
            setTimeout(() => {
                const overlayElement = document.getElementById('loadingOverlay');
                if (overlayElement) {
                    overlayElement.remove();
                }
            }, 30000);
        }
    </script>
}