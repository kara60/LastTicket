services:
  db:
    image: postgres:16-alpine
    container_name: ticketsystem-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-TicketSystemDb}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: ticketsystem-pgadmin
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@demo.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"

  web:
    build:
      context: .
      dockerfile: TicketSystem.Web/Dockerfile
    container_name: ticketsystem-web
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=db;Database=${POSTGRES_DB:-TicketSystemDb};Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-postgres};Port=5432;Pooling=true;Minimum Pool Size=5;Maximum Pool Size=20;
      - JwtSettings__SecretKey=${JWT_SECRET:-ChangeThisToALongRandomSecretKey}
      - JwtSettings__Issuer=TicketSystem
      - JwtSettings__Audience=TicketSystemUsers
      - JwtSettings__ExpiryMinutes=480
      - FileSettings__UploadPath=/app/wwwroot/uploads
    ports:
      - "8080:8080"
    volumes:
      - uploads:/app/wwwroot/uploads

volumes:
  pgdata:
  uploads: